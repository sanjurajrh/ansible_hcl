---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#
# ----------------------------------------------------------------------------
- name: Prepare random number
  ansible.builtin.set_fact:
    storage_account_name: "st{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
    batch_account_name: "ba{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: true

- name: Gather Resource Group info
  azure.azcollection.azure_rm_resourcegroup_info:
    name: "{{ resource_group }}"
  register: __rg_info

- name: Set location based on resource group
  ansible.builtin.set_fact:
    location: "{{ __rg_info.resourcegroups.0.location }}"

- name: Create Storage Account
  azure_rm_storageaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ storage_account_name }}"
    location: "{{ location }}"
    account_type: Standard_LRS

- name: Create identities array
  ansible.builtin.set_fact:
    managed_identity_ids: []

- name: Create user managed identities
  ansible.builtin.include_tasks: "{{ role_path }}/../../../integration_common_tasks/managed_identity.yml"
  vars:
    managed_identity_test_unique: 'batchaccount'
    managed_identity_unique: "{{ item }}"
    managed_identity_action: 'create'
    managed_identity_location: "{{ location }}"
  with_items:
    - '1'
    - '2'

- name: Create Batch Account
  azure_rm_batchaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
    location: "{{ location }}"
    auto_storage_account:
      name: "{{ storage_account_name }}"
    pool_allocation_mode: batch_service
    tags:
      key1: value1
      key2: value2
    identity:
      type: UserAssigned
      user_assigned_identity: "{{ managed_identity_ids[0] }}"
  register: output

- name: Assert the resource was created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.new.identity.type == "UserAssigned"
      - output.new.identity.user_assigned_identities | length == 1
      - output.new.identity.user_assigned_identities[managed_identity_ids[0]] is defined

- name: Create Batch Account -- idempotent
  azure_rm_batchaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
    location: "{{ location }}"
    auto_storage_account:
      name: "{{ storage_account_name }}"
    pool_allocation_mode: batch_service
    tags:
      key1: value1
      key2: value2
    identity:
      type: UserAssigned
      user_assigned_identity: "{{ managed_identity_ids[0] }}"
  register: output

- name: Assert the resource wasn't changed
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.new.identity.type == "UserAssigned"
      - output.new.identity.user_assigned_identities | length == 1
      - output.new.identity.user_assigned_identities[managed_identity_ids[0]] is defined

- name: Update user assigned identity
  azure_rm_batchaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
    location: "{{ location }}"
    auto_storage_account:
      name: "{{ storage_account_name }}"
    pool_allocation_mode: batch_service
    tags:
      key1: value1
      key2: value2
    identity:
      type: UserAssigned
      user_assigned_identity: "{{ managed_identity_ids[1] }}"
  register: output

- name: Assert the resource was changed
  ansible.builtin.assert:
    that:
      - output.changed
      - output.new.identity.type == "UserAssigned"
      - output.new.identity.user_assigned_identities | length == 1
      - output.new.identity.user_assigned_identities[managed_identity_ids[1]] is defined

- name: Get Batch Account facts
  azure_rm_batchaccount_info:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
  register: output

- name: Assert the facts
  ansible.builtin.assert:
    that:
      - output.batch_account | length == 1
      - output.batch_account[0].tags | length == 2
      - output.batch_account[0].identity.type == "UserAssigned"
      - output.batch_account[0].identity.user_assigned_identities | length == 1
      - output.batch_account[0].identity.user_assigned_identities[managed_identity_ids[1]] is defined

- name: Update identity type to SystemAssigned
  azure_rm_batchaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
    location: "{{ location }}"
    auto_storage_account:
      name: "{{ storage_account_name }}"
    pool_allocation_mode: batch_service
    tags:
      key1: value1
      key2: value2
    identity:
      type: SystemAssigned
  register: output

- name: Assert the resource was changed
  ansible.builtin.assert:
    that:
      - output.changed
      - output.new.identity.type == "SystemAssigned"
      - output.new.identity.user_assigned_identities is not defined

- name: Delete Batch Account
  azure_rm_batchaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ batch_account_name }}"
    state: absent
  register: output

- name: Assert that state has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Clean up storage account
  azure_rm_storageaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ storage_account_name }}"
    state: absent

- name: Delete user managed identities
  ansible.builtin.include_tasks: "{{ role_path }}/../../../integration_common_tasks/managed_identity.yml"
  vars:
    managed_identity_test_unique: 'batchaccount'
    managed_identity_unique: "{{ item }}"
    managed_identity_action: 'delete'
    managed_identity_location: "{{ location }}"
  with_items:
    - '1'
    - '2'
